import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import classification_report, accuracy_score

# 1. Load the dataset
df = pd.read_csv("bank-full.csv", sep=';')
print(df.head())

# 2. Encode categorical variables using one-hot encoding
df_encoded = pd.get_dummies(df, drop_first=True)

# 3. Define features and target variable
X = df_encoded.drop("y_yes", axis=1)
y = df_encoded["y_yes"]

# 4. Split the dataset into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 5. Train the Decision Tree Classifier with max depth 4
clf = DecisionTreeClassifier(max_depth=4, random_state=42)
clf.fit(X_train, y_train)

# 6. Make predictions on the test set
y_pred = clf.predict(X_test)

# 7. Evaluate the model
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))

# 8. Visualize the Decision Tree with depth 4
plt.figure(figsize=(20, 10))
plot_tree(clf, filled=True, feature_names=X.columns, class_names=["No", "Yes"])
plt.title("Decision Tree (max_depth=4) for Bank Marketing")
plt.show()
